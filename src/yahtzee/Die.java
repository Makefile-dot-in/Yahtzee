/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/BeanForm.java to edit this template
 */
package yahtzee;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.util.Random;
import javax.swing.JToggleButton;

/**
 *
 * @author kgaritis
 */
public class Die extends JToggleButton {
    
    static final int layout[] = {
        0b000000000,
        0b000010000,
        0b100000001,
        0b100010001,
        0b101000101,
        0b101010101,
        0b111000111
    };
    /**
     * Creates new form Die
     */
    public Die() {
        initComponents();
        this.setSize(this.getHeight(), this.getHeight());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        // TODO add your handling code here:
        int w = this.getHeight();
        int h = this.getWidth();
        int dim = Math.min(w, h);
        this.setSize(dim, dim);
    }//GEN-LAST:event_formComponentResized
    
    @Override
    public void paint(Graphics grph) {
        super.paint(grph);
        Graphics2D g = (Graphics2D) grph;
        int dim = this.getHeight();
        int unit = dim/3; // unit height
        int pad = dim/16;
        int diameter = unit - 2*pad;
        for (int i = 0; i < 9; i++) {
            if (((layout[n] >> i) & 1) == 1) {
                int ux = i / 3; // unit coordinates
                int uy = i % 3;
                g.fillOval(ux*unit + pad, uy*unit + pad, diameter, diameter);
            }
        }
    }

    public void clear() { setN(0); }

    public int getN() { return n; }
    public int setN(int n) { this.n = n; setEnabled(n != 0); this.repaint(); return n; }
    void roll() { setN(rand.nextInt(6) + 1); }
    private int n = 0;
    private Random rand = new Random();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
