    /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package yahtzee;

import java.awt.Color;
import yahtzee.Combinations.Category;

/**
 *
 * @author user
 */
public class Scorebox extends javax.swing.JPanel {

    /**
     * Creates new form Scorebox
     * @param scorefront
     * @param cat
     */
    public Scorebox(Scorecard scorefront, Category cat) {
        initComponents();
        this.scorefront = scorefront;
        this.cat = cat;
        button.setText(cat.toString());
        button.setEnabled(false);
    }
    
    public void showCurrentScore(int score) {
        hasScore = score >= 0;
        button.setEnabled(false);
        points.setForeground(Color.black);
        points.setText(hasScore ? String.valueOf(score) : "");
    }
    
    public void showPotentialScore(int score) {
        if (hasScore) return;
        button.setEnabled(true);
        points.setForeground(Color.green);
        points.setText(String.valueOf(score));
    }
    
    public void clearScore() {
        button.setEnabled(false);
        points.setText("");
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        button = new javax.swing.JButton();
        points = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        button.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        button.setText("Category Name");
        button.setAlignmentX(0.5F);
        button.setMargin(new java.awt.Insets(0, 0, 0, 0));
        button.setMaximumSize(new java.awt.Dimension(200, 19));
        button.setPreferredSize(new java.awt.Dimension(200, 19));
        button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });
        add(button);

        points.setBackground(new java.awt.Color(255, 255, 255));
        points.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        points.setForeground(new java.awt.Color(0, 0, 0));
        points.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        points.setAlignmentX(0.5F);
        points.setMaximumSize(new java.awt.Dimension(200, 200));
        points.setOpaque(true);
        points.setPreferredSize(new java.awt.Dimension(71, 90));
        add(points);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonActionPerformed
        // TODO add your handling code here:
        scorefront.onCategorySelected(cat);
    }//GEN-LAST:event_buttonActionPerformed
    private final Scorecard scorefront;
    private boolean enabled;
    private final Category cat;
    private boolean hasScore;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button;
    private javax.swing.JLabel points;
    // End of variables declaration//GEN-END:variables
}
